{"version":3,"sources":["Components/ContactForm/ContactForm .js","Components/ContactList/ContactList .js","Components/Filter/Filter.js","App.js","index.js"],"names":["ContactForm","onCheckUnique","onAdd","useState","name","setName","number","setNumber","handleChange","target","value","validateForm","alert","reset","onSubmit","e","preventDefault","id","uuid","onChange","type","placeholder","pattern","title","required","ContactListItem","onRemove","onClick","ContactList","contacts","lengs","map","contact","Filter","filter","App","JSON","parse","localStorage","getItem","setContacts","useEffect","window","setItem","stringify","setFilter","newContact","prevContacts","console","log","isExistContact","find","toLowerCase","includes","getVisibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1e12faf3.chunk.js","sourcesContent":["import { useState } from 'react'\r\nimport { v4 as uuid } from 'uuid'\r\n\r\nexport default function ContactForm({ onCheckUnique, onAdd }) {\r\n\tconst [name, setName] = useState('')\r\n\tconst [number, setNumber] = useState('')\r\n\r\n\tconst handleChange = ({ target }) => {\r\n\t\tconst { name, value } = target\r\n\r\n\t\tswitch (name) {\r\n\t\t\tcase 'name':\r\n\t\t\t\tsetName(value)\r\n\t\t\t\tbreak\r\n\r\n\t\t\tcase 'number':\r\n\t\t\t\tsetNumber(value)\r\n\t\t\t\tbreak\r\n\r\n\t\t\tdefault:\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault()\r\n\t\tif (!validateForm()) return\r\n\t\tonAdd({ id: uuid(), name, number })\r\n\r\n\t\treset()\r\n\t}\r\n\r\n\tconst validateForm = () => {\r\n\t\tif (!name || !number) {\r\n\t\t\talert('Some filed is empty')\r\n\t\t\treturn false\r\n\t\t}\r\n\t\treturn onCheckUnique(name)\r\n\t}\r\n\r\n\tconst reset = () => {\r\n\t\tsetName('')\r\n\t\tsetNumber('')\r\n\t}\r\n\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t<label>\r\n\t\t\t\tName\r\n\t\t\t\t<input\r\n\t\t\t\t\tvalue={name}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\tplaceholder=\"Enter name\"\r\n\t\t\t\t\tpattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n\t\t\t\t\ttitle=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n\t\t\t\t\trequired\r\n\t\t\t\t/>\r\n\t\t\t</label>\r\n\r\n\t\t\t<label>\r\n\t\t\t\tNumber\r\n\t\t\t\t<input\r\n\t\t\t\t\tvalue={number}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\ttype=\"tel\"\r\n\t\t\t\t\tname=\"number\"\r\n\t\t\t\t\tplaceholder=\"Enter number\"\r\n\t\t\t\t\tpattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n\t\t\t\t\ttitle=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n\t\t\t\t\trequired\r\n\t\t\t\t/>\r\n\t\t\t</label>\r\n\t\t\t<button type=\"submit\">Add contact</button>\r\n\t\t</form>\r\n\t)\r\n}\r\n","import React from 'react'\r\n\r\nconst ContactListItem = ({ id, name, number, onRemove }) => {\r\n\treturn (\r\n\t\t<li>\r\n\t\t\t{name}:{number} <button onClick={() => onRemove(id)}>delete</button>\r\n\t\t</li>\r\n\t)\r\n}\r\n\r\nconst ContactList = ({ contacts, onRemove }) => {\r\n\tif (contacts.lengs === 0) return null\r\n\treturn (\r\n\t\t<ul>\r\n\t\t\t{contacts.map((contact) => (\r\n\t\t\t\t<ContactListItem {...contact} onRemove={onRemove} />\r\n\t\t\t))}\r\n\t\t</ul>\r\n\t)\r\n}\r\n\r\nexport default ContactList\r\n","import React from 'react'\r\n\r\nconst Filter = ({ filter, onChange }) => {\r\n\treturn (\r\n\t\t<input\r\n\t\t\ttype=\"text\"\r\n\t\t\tname=\"filter\"\r\n\t\t\tvalue={filter}\r\n\t\t\tonChange={({ target }) => onChange(target.value)}\r\n\t\t\tplaceholder=\"Enter name for Search\"\r\n\t\t/>\r\n\t)\r\n}\r\n\r\nexport default Filter\r\n","import { useState, useEffect } from 'react'\n\nimport ContactForm from './Components/ContactForm'\nimport ContactList from './Components/ContactList'\nimport Filter from './Components/Filter'\n\nexport default function App() {\n\tconst [contacts, setContacts] = useState(() => {\n\t\treturn JSON.parse(localStorage.getItem('contacts')) ?? []\n\t})\n\n\tuseEffect(() => {\n\t\twindow.localStorage.setItem('contacts', JSON.stringify(contacts))\n\t}, [contacts])\n\n\tconst [filter, setFilter] = useState('')\n\n\tconst henlerAddContact = (newContact) => {\n\t\tsetContacts((prevContacts) => [...prevContacts, newContact])\n\t\tconsole.log(newContact)\n\t\tconsole.log(contacts)\n\t}\n\n\tconst hendleCheck = (name) => {\n\t\tconst isExistContact = !!contacts.find((contact) => contact.name === name)\n\t\tisExistContact && alert('Contact is already exist')\n\t\treturn !isExistContact\n\t}\n\n\tconst hendleRemove = (id) => {\n\t\tsetContacts(contacts.filter((contact) => contact.id !== id))\n\t}\n\n\tconst filterChange = (filter) => setFilter(filter)\n\n\tconst getVisibleContacts = () => {\n\t\tif (contacts !== '')\n\t\t\treturn contacts.filter((contact) =>\n\t\t\t\tcontact.name.toLowerCase().includes(filter.toLowerCase())\n\t\t\t)\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<h2>Phonebook</h2>\n\t\t\t<ContactForm onAdd={henlerAddContact} onCheckUnique={hendleCheck} />\n\n\t\t\t<h2>Contacts</h2>\n\t\t\t<Filter filter={filter} onChange={filterChange} />\n\t\t\t<ContactList contacts={getVisibleContacts()} onRemove={hendleRemove} />\n\t\t</div>\n\t)\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}